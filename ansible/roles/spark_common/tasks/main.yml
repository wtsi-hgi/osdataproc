---

- name: Copy /etc/profile template file
  become: yes
  template: src=profile/profile.j2 dest=/etc/profile

- name: Ensure Spark directories exist
  file:
          state: directory
          path: "{{ item }}"
          mode: 0755
          owner: "{{ spark_user }}"
          group: "{{ spark_group }}"
  loop:
          - "{{ spark_download_dir }}"
          - "{{ spark_install_dir }}"
          - "{{ spark_conf_dir }}"


- name: Use local Spark tarball if present
  become: yes
  copy:
          src: "{{ osdataproc.downloads_dir | expanduser }}/spark-{{ spark_version }}-bin-without-hadoop.tgz"
          dest: "{{ spark_download_dir }}/spark.tgz"
          mode: '0644'
  when: (lookup('file', osdataproc.downloads_dir  ~ '/spark-' ~ spark_version ~ '-bin-without-hadoop.tgz', errors='ignore') | default('')) | length > 0
  tags: master

# - name: Download Spark distribution from cache (if available)
#   become: yes
#   get_url:
#           url: "{{ cache_base_url }}/spark-{{ spark_version }}-bin-without-hadoop.tgz"
#           dest: "{{ spark_download_dir }}/spark.tgz"
#           timeout: 60
#   when: lookup('file', '/home/ubuntu/work/hail-cluster-openstack/downloads/spark-{{ spark_version }}-bin-without-hadoop.tgz', errors='ignore') | length == 0
#   ignore_errors: yes
#   register: spark_s3_get
#   tags: master

- name: Download Spark distribution (fallback)
  become: yes
  get_url:
          url: "{{ spark_mirror }}/spark-{{ spark_version }}/spark-{{ spark_version }}-bin-without-hadoop.tgz"
          dest: "{{ spark_download_dir }}/spark.tgz"
          timeout: 60
  when: (lookup('file', osdataproc.downloads_dir ~ '/spark-' ~ spark_version ~ '-bin-without-hadoop.tgz', errors='ignore') | default('')) | length == 0 and (spark_s3_get is not defined or spark_s3_get is failed)
  tags: master

- name: Extract Spark distribution
  become: yes
  unarchive:
          src: "{{ spark_download_dir }}/spark.tgz"
          dest: "{{ spark_install_dir }}"
          owner: "{{ spark_user }}"
          group: "{{ spark_group }}"
          extra_opts: [--strip-components=1]
          keep_newer: yes
          remote_src: yes
  tags: master

- name: Copy Spark configuration files
  become: yes
  template:
          src: "{{ item }}"
          dest: "{{ spark_home }}/conf/{{ item | basename | regex_replace('.j2','') }}"
          owner: "{{ spark_user }}"
          group: "{{ spark_group }}"
  with_fileglob:
          - ../templates/*.j2

- name: Create Spark systemd service files
  template:
          src: "{{ item }}"
          dest: "/etc/systemd/system/{{ item | basename | regex_replace('.j2', '') }}"
          owner: root
          group: root
  with_fileglob:
          - ../templates/systemd/*.j2
